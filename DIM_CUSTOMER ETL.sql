/* ETL Script for DIM_CUSTOMER */

USE CarSales_DB;

-- Variables

DECLARE @RowCount INT;
DECLARE @RowCounter INT = 1;
DECLARE @CUSTOMERID INT;
DECLARE @FULLNAME NVARCHAR(60);
DECLARE @GENDER NVARCHAR(6);
DECLARE @DOB DATE;
DECLARE @AGEGROUP NVARCHAR(15);
DECLARE @CELLNO NVARCHAR(20);
DECLARE @ADDRESS NVARCHAR(250);
DECLARE @EMAIL NVARCHAR(100);
DECLARE @COUNTRYID INT;
DECLARE @COUNTRY NVARCHAR(100);
DECLARE @CONTINENT NVARCHAR(50);
DECLARE @DATEREGISTERED DATE;
DECLARE @STATUSID INT;
DECLARE @CUSTOMERSTATUS NVARCHAR(50);

-- Get total rows in source columns
SELECT @RowCount = COUNT(*) FROM CUSTOMER;

WHILE @RowCounter <= @RowCount

BEGIN
USE CarSales_DB;

-- Extraction into CTE
WITH CTE AS(
	SELECT ROW_NUMBER() OVER (ORDER BY a.CUSTOMERID) AS ROWID,
		a.*,
		b.CUSTOMERSTATUS,
		c.COUNTRY, c.CONTINENT
	FROM CUSTOMER a,
		CUSTOMERSTATUS b,
		COUNTRY c
	WHERE a.STATUSID = b.STATUSID AND a.COUNTRYID = c.COUNTRYID
)

-- Transformation: Extract from CTE into variables
SELECT @CUSTOMERID = a.CUSTOMERID,
	@FULLNAME = a.FIRSTNAME + ' ' + a.SURNAME,
	@GENDER = CASE WHEN a.GENDER = 'M' THEN 'Male' ELSE 'Female' END,
	@DOB = a.DOB,
	@AGEGROUP = CASE WHEN DATEDIFF(YEAR, a.DOB, GETDATE()) < 13 THEN 'Child' WHEN DATEDIFF(YEAR, a.DOB, GETDATE()) < 20 THEN 'Teenager'
	WHEN DATEDIFF(YEAR, a.DOB, GETDATE()) < 36 THEN 'Youth' WHEN DATEDIFF(YEAR, a.DOB, GETDATE()) < 51 THEN 'Adult'
	WHEN DATEDIFF(YEAR, a.DOB, GETDATE()) < 66 THEN 'Elder'  ELSE 'Senior Citizen' END,
	@CELLNO = ISNULL(a.CELLNO, ''),
	@ADDRESS = CAST(a.ADDRESS AS NVARCHAR),
	@EMAIL = ISNULL(a.EMAIL, ''),
	@COUNTRYID = a.COUNTRYID,
	@COUNTRY = ISNULL(a.COUNTRY, ''),
	@CONTINENT = ISNULL(a.CONTINENT, ''),
	@DATEREGISTERED = a.DATEREGISTERED,
	@STATUSID = a.STATUSID,
	@CUSTOMERSTATUS = ISNULL(a.CUSTOMERSTATUS, '')
FROM CTE a
WHERE a.ROWID = @RowCounter
ORDER BY a.CUSTOMERID ASC;

-- Load into DW table
USE CarSales_DW;

INSERT INTO DIM_CUSTOMER VALUES (@CUSTOMERID, @FULLNAME, @GENDER, @DOB, @AGEGROUP, @CELLNO, @ADDRESS, @EMAIL, @COUNTRYID, @COUNTRY, 
@CONTINENT, @DATEREGISTERED, @STATUSID, @CUSTOMERSTATUS);
SET @RowCounter += 1;
END

/* End of ETL Script for DIM_CUSTOMER */